.095-.1045
(.095-.1045) / .05
part_no = rep(1:10)
rep("F", times = 5)
gender = c(rep("Female", times = 5), rep("Male", times = 5))
PS = c(36, 32, 28, 22, 18, 36, 32, 28, 22, 18)
SD = c(4.0, 4.5, 5.2, 6.0, 7.0, 6.5, 6.2, 6.0, 6.1, 6.3)
dat = as.data.frame(part_no, gender, PS, SD)
dat = data.frame(part_no, gender, PS, SD)
mean(dat$PS)
mean(dat$SD)
mean(dat$PS); sd(dat$PS)
mean(dat$SD); sd(dat$SD)
cov(dat$PS, dat$SD)
cor(dat$PS, dat$SD)
lm(dat$PS ~ dat$SD)
summary(lm(dat$PS ~ dat$SD))
summary(lm(dat$SD ~ dat$PS))
m1 = (lm(dat$SD ~ dat$PS))
summary(m1)
m1$coefficients
m1$coefficients[2]
b = m1$coefficients[2]
b
b + 1
mean(dat$SD) - (b * mean(dat$PS)
mean(dat$SD) - (b * mean(dat$PS))
summary(m1)
cov(dat$PS, dat$SD) /var(dat$SD)
cov(dat$PS, dat$SD
cov(dat$PS, dat$SD)
var(dat$SD)
cov(dat$PS, dat$SD) / var(dat$PS)
b
##test slope formula
#slope
mean(dat$SD) - (b * mean(dat$PS))
#slope
cov(dat$PS, dat$SD) / var(dat$PS)
##test slope formula
#intercept
A = mean(dat$SD) - (b * mean(dat$PS))
#slope
B = cov(dat$PS, dat$SD) / var(dat$PS)
#Y = bx + a
B * 40 + A
bf = -1.63
ba = 9.78
bm * 40 + am
bm = .0097
am = 5.96
bm * 40 + am
##females
bf = -1.63
ba = 9.78
af = 9.78
bf * 40 + af
##females
bf = -1.63
af = 9.78
bf * 40 + af
af
bf * 40
bm
bf
bf * 40
##females
bf = -.163
af = 9.78
bf * 40 + af
cv = cov(dat$PS, dat$SD)
cor(dat$PS, dat$SD)
(sd(dat$SD) * sd(dat$PS))
cv / (sd(dat$SD) * sd(dat$PS))
cor(dat$PS, dat$SD)
cv
##test slope formula
#intercept
A = mean(dat$SD) - (b * mean(dat$PS))
#slope
B = cov(dat$PS, dat$SD) / var(dat$PS)
b = m1$coefficients[2]
b
summary(m1)
#Y = bx + a
B * 40 + A
bm = .0097
am = 5.96
bm * 40 + am
##females
bf = -.163
af = 9.78
bf * 40 + af
#Y = bx + a
B * 40 + A
summary(m1)
bf * 40 + af
bm * 40 + am
.85 - .51 / 1 - .51
(.85 - .51) / (1 - .51)
setwd("~/GitHub/Mediated-Reactivity-2/3 Analyses/Ex 2B")
####set up####
##read in data
JOL = rbind(read.csv("MSU/JOL Scored MSU.csv"), read.csv("USM/JOL Scored USM.csv"))
Read = rbind(read.csv("MSU/Read Scored MSU.csv"), read.csv("USM/Read Scored USM.csv"))
table(JOL$source) / 90 + table(Read$source) / 90
##load libraries
library(reshape)
library(ez)
library(psychReport)
options(scipen = 999)
##set up the dataframe
JOL = JOL[ , -c(2:4, 6, 8, 11, 14)]
Read = Read[ , -c(2:4, 6, 8, 11, 13)]
colnames(JOL)[3] = "Encoding_Group"
colnames(JOL)[4] = "Block"
colnames(JOL)[5] = "Direction"
colnames(JOL)[7] = "JOL"
colnames(Read)[3] = "Encoding_Group"
colnames(Read)[4] = "Block"
colnames(Read)[5] = "Direction"
#fix out of range JOLs
JOL$JOL[JOL$JOL > 100] = NA
##check for outliers
#recall
JOL.wide = cast(JOL, id ~ Direction, value = "Scored", mean)
Read.wide = cast(Read, id ~ Direction, value = "Scored", mean)
##anyone not do the JOL task?
JOL.wide2 = cast(JOL, id ~ Direction, value = "JOL", mean, na.rm = T)
#drop them
JOL = subset(JOL,
id != "w10191338" & id != "w10184950DT" & id != "w10182464")
Read = subset(Read,
id != "w10175528_CLJ" & id != "M20343281ega" & id != "M20223504BG" & id != "M20340785CH")
##put everything together
combined = rbind(JOL[ , -7], Read)
combined = combined[ , c(1, 3:5, 6, 2)]
#make recall a percent
combined$Scored = combined$Scored * 100
####Descriptives####
tapply(combined$Scored, list(combined$Encoding_Group, combined$Direction), mean) #reactivity patterns (recall)
tapply(JOL$JOL, JOL$Direction, mean, na.rm = T)
##test JOLs
JOL2 = na.omit(JOL)
mod.jol = ezANOVA(JOL2,
wid = id,
dv = JOL,
between = Direction,
type = 3,
detailed = T)
mod.jol #overall is sig
JOL.wide3 = cast(JOL2, id ~ Direction, value = "JOL", mean, na.rm = T)
apply(JOL.wide3, 2, mean)
#SDS
apply(JOL.wide3, 2, sd)
#95% Ci
(apply(JOL.wide3, 2, sd) / sqrt(nrow(JOL.wide3))) * 1.96
#F vs M
temp = t.test(JOL.wide3$F, JOL.wide3$M, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
#F vs U
temp = t.test(JOL.wide3$F, JOL.wide3$U, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
#M vs U
temp = t.test(JOL.wide3$M, JOL.wide3$U, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
#M vs U
temp = t.test(JOL.wide3$M, JOL.wide3$U, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
####set up####
##read in data
JOL = rbind(read.csv("MSU/JOL Scored MSU.csv"), read.csv("USM/JOL Scored USM.csv"))
Read = rbind(read.csv("MSU/Read Scored MSU.csv"), read.csv("USM/Read Scored USM.csv"))
table(JOL$source) / 90 + table(Read$source) / 90
##load libraries
library(reshape)
library(ez)
library(psychReport)
options(scipen = 999)
##set up the dataframe
JOL = JOL[ , -c(2:4, 6, 8, 11, 14)]
Read = Read[ , -c(2:4, 6, 8, 11, 13)]
colnames(JOL)[3] = "Encoding_Group"
colnames(JOL)[4] = "Block"
colnames(JOL)[5] = "Direction"
colnames(JOL)[7] = "JOL"
colnames(Read)[3] = "Encoding_Group"
colnames(Read)[4] = "Block"
colnames(Read)[5] = "Direction"
#fix out of range JOLs
JOL$JOL[JOL$JOL > 100] = NA
##check for outliers
#recall
JOL.wide = cast(JOL, id ~ Direction, value = "Scored", mean)
Read.wide = cast(Read, id ~ Direction, value = "Scored", mean)
##anyone not do the JOL task?
JOL.wide2 = cast(JOL, id ~ Direction, value = "JOL", mean, na.rm = T)
#drop them
JOL = subset(JOL,
id != "w10191338" & id != "w10184950DT" & id != "w10182464")
Read = subset(Read,
id != "w10175528_CLJ" & id != "M20343281ega" & id != "M20223504BG" & id != "M20340785CH")
##put everything together
combined = rbind(JOL[ , -7], Read)
combined = combined[ , c(1, 3:5, 6, 2)]
#make recall a percent
combined$Scored = combined$Scored * 100
####Descriptives####
tapply(combined$Scored, list(combined$Encoding_Group, combined$Direction), mean) #reactivity patterns (recall)
tapply(JOL$JOL, JOL$Direction, mean, na.rm = T)
##test JOLs
JOL2 = na.omit(JOL)
mod.jol = ezANOVA(JOL2,
wid = id,
dv = JOL,
between = Direction,
type = 3,
detailed = T)
mod.jol #overall is sig
JOL.wide3 = cast(JOL2, id ~ Direction, value = "JOL", mean, na.rm = T)
apply(JOL.wide3, 2, mean)
#SDS
apply(JOL.wide3, 2, sd)
#95% Ci
(apply(JOL.wide3, 2, sd) / sqrt(nrow(JOL.wide3))) * 1.96
#F vs M
temp = t.test(JOL.wide3$F, JOL.wide3$M, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
#F vs U
temp = t.test(JOL.wide3$F, JOL.wide3$U, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
#M vs U
temp = t.test(JOL.wide3$M, JOL.wide3$U, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
####Run the ANOVAs####
model1 = ezANOVA(combined,
wid = id,
dv = Scored,
between = Encoding_Group,
within = Direction,
type = 3,
detailed = T)
model1
model1$ANOVA$MSE = model1$ANOVA$SSd/model1$ANOVA$DFd
model1$ANOVA$MSE
aovEffectSize(model1, effectSize = "pes")
####comparisons####
tapply(combined$Scored, combined$Encoding_Group, mean) #main effect encoding
tapply(combined$Scored, combined$Direction, mean) #main effect direction
tapply(combined$Scored, list(combined$Encoding_Group, combined$Direction), mean, na.rm = T) #Interaction
####Post-Hocs####
###break down direction main effect
combined.direction = cast(combined, id ~ Direction, mean)
#F vs M
temp = t.test(combined.direction$F, combined.direction$M, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
#F vs U
temp = t.test(combined.direction$F, combined.direction$U, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
#U vs M
temp = t.test(combined.direction$M, combined.direction$U, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
##get means and sds for d
mean(combined.direction$F); sd(combined.direction$F)
mean(combined.direction$M); sd(combined.direction$M)
mean(combined.direction$U); sd(combined.direction$U)
#Not surprisingly, everything is sig!
###Interaction
jol3 = subset(combined, combined$Encoding_Group == "JOL")
read3 = subset(combined, combined$Encoding_Group == "Read")
jol.ph = cast(jol3, id ~ Direction, mean)
read.ph = cast(read3, id ~ Direction, mean)
(apply(jol.ph[ , -1], 2, sd) / sqrt(nrow(jol.ph))) * 1.96
(apply(read.ph[ , -1], 2, sd) / sqrt(nrow(read.ph))) * 1.96
nrow(jol.ph)
nrow(read.ph)
mean(jol.ph$F); mean(jol.ph$M)
mean(read.ph$F); mean(read.ph$M)
##forward
temp = t.test(jol.ph$F, read.ph$F, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
sd(read.ph$F); sd(read.ph$M); sd(read.ph$U)
##mediated
temp = t.test(jol.ph$M, read.ph$M, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
sd(jol.ph$M); sd(read.ph$M)
pbic1 = jol.ph[ , c(1,3)]
pbic2 = read.ph[ , c(1,3)]
pbic1$group = rep("jol")
pbic2$group = rep("read")
pbic3 = rbind(pbic1, pbic2)
ezANOVA(pbic3,
dv = M,
between = group,
wid = id,
type = 3,
detailed = T)
#unrelated
temp = t.test(jol.ph$U, read.ph$U, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
pbic1 = jol.ph[ , c(1,4)]
pbic2 = read.ph[ , c(1,4)]
pbic1$group = rep("jol")
pbic2$group = rep("read")
pbic3 = rbind(pbic1, pbic2)
ezANOVA(pbic3,
dv = U,
between = group,
wid = id,
type = 3,
detailed = T)
#post cleaning group sizes
length(unique(jol.ph$id)) #60
length(unique(read.ph$id)) #59
##Get CIs for table
(apply(jol.ph, 2, sd) / sqrt(nrow(jol.ph))) * 1.96
(apply(read.ph, 2, sd) / sqrt(nrow(read.ph))) * 1.96
View(JOL)
View(jol3)
View(combined)
####Get RTs####
tapply(combined$Response.RT, list(combined$Direction, combined$Encoding_Group), mean)
####Get RTs####
tapply(combined$Response.RT, list(combined$Encoding_Group, combined$Direction), mean)
