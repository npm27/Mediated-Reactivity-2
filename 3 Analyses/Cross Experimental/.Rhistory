combined$encoding == "JOL")
Read3 = subset(combined,
combined$encoding == "Read")
JOL.wide = cast(JOL4, id ~ direction, mean)
Read.wide = cast(Read3, id ~ direction, mean)
##drops
combined = subset(combined,
combined$id != "w10141665_ljd") #correctly recalled basically all pair types -- suggests cheating
combined = subset(combined,
combined$id != "w10186913_mnr") #correctly recalled basically all pair types -- suggests cheating
combined = subset(combined,
combined$id != "w10126861SES") #recalled less than 5% across all categories -- suggests not paying attention
####Run the Anova####
model1 = ezANOVA(combined,
dv = score,
between = encoding,
within = direction,
wid = id,
type = 3,
detailed = T)
model1$ANOVA$MSE = model1$ANOVA$SSd/model1$ANOVA$DFd
model1$ANOVA$MSE
aovEffectSize(model1, effectSize = "pes")
#Everything is already significant
####Post hocs####
tapply(combined$score, combined$encoding, mean) #main effect encoding
tapply(combined$score, combined$direction, mean) #main effect direction
tapply(combined$score, list(combined$encoding, combined$direction), mean, na.rm = T) #Interaction
###break down direction main effect
combined.direction = cast(combined, id ~ direction, mean)
#F vs M
temp = t.test(combined.direction$F, combined.direction$M, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
#F vs U
temp = t.test(combined.direction$F, combined.direction$U, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
#U vs M
temp = t.test(combined.direction$M, combined.direction$U, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
##get d
mean(combined.direction$M); sd(combined.direction$M)
mean(combined.direction$U); sd(combined.direction$U)
#Not surprisingly, everything is sig!
###Interaction
jol3 = subset(combined, combined$encoding == "JOL")
read3 = subset(combined, combined$encoding == "Read")
jol.ph = cast(jol3, id ~ direction, mean)
read.ph = cast(read3, id ~ direction, mean)
(apply(jol.ph[ , -1], 2, sd) / sqrt(nrow(jol.ph))) * 1.96
(apply(read.ph[ , -1], 2, sd) / sqrt(nrow(read.ph))) * 1.96
nrow(jol.ph)
nrow(read.ph)
mean(jol.ph$F); mean(jol.ph$M)
mean(read.ph$F); mean(read.ph$M)
##forward
temp = t.test(jol.ph$F, read.ph$F, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
sd(jol.ph$F); sd(read.ph$F)
##mediated
temp = t.test(jol.ph$M, read.ph$M, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig = .003
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
sd(jol.ph$M); sd(read.ph$M)
#unrelated
temp = t.test(jol.ph$U, read.ph$U, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #Non-Sig
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
#get pbic
pbic1 = jol.ph[ , c(1, 4)]
pbic2 = read.ph[ , c(1, 4)]
pbic1$encoding = rep("JOL")
pbic2$encoding = rep("read")
pbic3 = rbind(pbic1, pbic2)
ezANOVA(pbic3,
dv = U,
wid = id,
between = encoding,
detailed = T,
type = 3)
#get ns
length(unique(jol.ph$id)) #56
length(unique(read.ph$id)) #59
##get CIs
(apply(jol.ph, 2, sd) / sqrt(nrow(jol.ph))) * 1.96
(apply(read.ph, 2, sd) / sqrt(nrow(read.ph))) * 1.96
tapply(JOL3$Response.JOL, JOL3$Stimuli.Stimuli.Notes, mean, na.rm = T)
View(JOL3)
JOL3.wide = cast(JOL3, id ~ Stimuli.Stimuli.Notes, mean, na.rm = T)
sd(JOL3.wide$M); sd(JOL3.wide$U, na.rm = T)
##read in data
JOL = read.csv("Backward M/JOL Scored.csv")
Read = read.csv("Backward M/Read Scored.csv")
#load libraries
library(reshape)
library(ez)
library(psychReport)
#turn off scientific notation
options(scipen = 999)
##drop unused columns
JOL2 = JOL[ , -c(2:4, 6, 8:9, 11:13)]
Read2 = Read[ , -c(2:4, 6, 8:9, 11:12)]
#slap together and rearrange columns
combined = rbind(JOL2, Read2)
combined = combined[ , c(1, 3, 4, 5, 2)]
#rename columns
colnames(combined)[c(2:3, 5)] = c("encoding", "direction", "score")
#get score on correct scale
combined$score = combined$score * 100
tapply(combined$score, list(combined$encoding, combined$direction), mean, na.rm = T)
##any difference in JOLs?
JOL3 = JOL[ , -c(2:4, 6, 8:9, 11, 13:14)]
#Remove out of range JOLs
JOL3$Response.JOL[JOL3$Response.JOL > 100] = NA
tapply(JOL3$Response.JOL, JOL3$Stimuli.Stimuli.Notes, mean, na.rm = T)
JOL3.wide = cast(JOL3, id ~ Stimuli.Stimuli.Notes, mean, na.rm = T)
#SDS
apply(JOL3.wide, 2, sd)
#95% Ci
(apply(JOL3.wide, 2, sd) / sqrt(nrow(JOL3.wide))) * 1.96
####Outliers####
summary(combined)
JOL4 = subset(combined,
combined$encoding == "JOL")
Read3 = subset(combined,
combined$encoding == "Read")
JOL.wide = cast(JOL4, id ~ direction, mean)
Read.wide = cast(Read3, id ~ direction, mean)
##drops
combined = subset(combined,
combined$id != "w10141665_ljd") #correctly recalled basically all pair types -- suggests cheating
combined = subset(combined,
combined$id != "w10186913_mnr") #correctly recalled basically all pair types -- suggests cheating
combined = subset(combined,
combined$id != "w10126861SES") #recalled less than 5% across all categories -- suggests not paying attention
####Run the Anova####
model1 = ezANOVA(combined,
dv = score,
between = encoding,
within = direction,
wid = id,
type = 3,
detailed = T)
model1$ANOVA$MSE = model1$ANOVA$SSd/model1$ANOVA$DFd
model1$ANOVA$MSE
aovEffectSize(model1, effectSize = "pes")
#Everything is already significant
####Post hocs####
tapply(combined$score, combined$encoding, mean) #main effect encoding
tapply(combined$score, combined$direction, mean) #main effect direction
tapply(combined$score, list(combined$encoding, combined$direction), mean, na.rm = T) #Interaction
###break down direction main effect
combined.direction = cast(combined, id ~ direction, mean)
#F vs M
temp = t.test(combined.direction$F, combined.direction$M, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
#F vs U
temp = t.test(combined.direction$F, combined.direction$U, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
#U vs M
temp = t.test(combined.direction$M, combined.direction$U, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
##get pbics
pbic1 = combined.direction[ , c(1, 3)]
pbic2 = combined.direction[ , c(1, 4)]
colnames(pbic1)[2] = "score"
colnames(pbic2)[2] = "score"
pbic1$pair = rep("M")
pbic2$pair = rep("u")
pbic3 = rbind(pbic1, pbic2)
ezANOVA(pbic3,
wid = id,
within = pair,
dv = score,
type = 3,
detailed = T)
##get d
mean(combined.direction$M); sd(combined.direction$M)
mean(combined.direction$U); sd(combined.direction$U)
#Not surprisingly, everything is sig!
###Interaction
jol3 = subset(combined, combined$encoding == "JOL")
read3 = subset(combined, combined$encoding == "Read")
jol.ph = cast(jol3, id ~ direction, mean)
read.ph = cast(read3, id ~ direction, mean)
(apply(jol.ph[ , -1], 2, sd) / sqrt(nrow(jol.ph))) * 1.96
(apply(read.ph[ , -1], 2, sd) / sqrt(nrow(read.ph))) * 1.96
nrow(jol.ph)
nrow(read.ph)
mean(jol.ph$F); mean(jol.ph$M)
mean(read.ph$F); mean(read.ph$M)
##forward
temp = t.test(jol.ph$F, read.ph$F, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig!
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
sd(jol.ph$F); sd(read.ph$F)
#get pbic
pbic1 = jol.ph[ , c(1, 2)]
pbic2 = read.ph[ , c(1, 2)]
pbic1$encoding = rep("JOL")
pbic2$encoding = rep("read")
pbic3 = rbind(pbic1, pbic2)
ezANOVA(pbic3,
dv = F,
wid = id,
between = encoding,
detailed = T,
type = 3)
##mediated
temp = t.test(jol.ph$M, read.ph$M, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #sig = .003
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
sd(jol.ph$M); sd(read.ph$M)
#get pbic
pbic1 = jol.ph[ , c(1, 3)]
pbic2 = read.ph[ , c(1, 3)]
pbic1$encoding = rep("JOL")
pbic2$encoding = rep("read")
pbic3 = rbind(pbic1, pbic2)
ezANOVA(pbic3,
dv = M,
wid = id,
between = encoding,
detailed = T,
type = 3)
#unrelated
temp = t.test(jol.ph$U, read.ph$U, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic #Non-Sig
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
sd(jol.ph$U); sd(read.ph$U)
#get pbic
pbic1 = jol.ph[ , c(1, 4)]
pbic2 = read.ph[ , c(1, 4)]
pbic1$encoding = rep("JOL")
pbic2$encoding = rep("read")
pbic3 = rbind(pbic1, pbic2)
ezANOVA(pbic3,
dv = U,
wid = id,
between = encoding,
detailed = T,
type = 3)
#get ns
length(unique(jol.ph$id)) #56
length(unique(read.ph$id)) #59
##get CIs
(apply(jol.ph, 2, sd) / sqrt(nrow(jol.ph))) * 1.96
(apply(read.ph, 2, sd) / sqrt(nrow(read.ph))) * 1.96
####Now RTs####
jol.ph.rt = cast(jol3, id ~ direction, mean, value = "Response.RT")
read.ph.rt = cast(read3, id ~ direction, mean, value = "Response.RT")
apply(read.ph.rt, 2, mean)
apply(jol.ph.rt, 2, mean)
apply(read.ph.rt, 2, sd)
apply(jol.ph.rt, 2, sd)
##run the analysis
modelRT = ezANOVA(combined,
dv = Response.RT,
between = encoding,
within = direction,
wid = id,
type = 3,
detailed = T)
modelRT$ANOVA$MSE = modelRT$ANOVA$SSd/modelRT$ANOVA$DFd
modelRT$ANOVA$MSE
aovEffectSize(modelRT, effectSize = "pes")
##Main effects and interactions
tapply(combined$Response.RT, combined$direction, mean)
tapply(combined$Response.RT, combined$encoding, mean)
#build the post-hoc dataset
combined.RT.wide = cast(combined, id ~ direction, value = "Response.RT", mean)
##F vs M
temp = t.test(combined.RT.wide$F, combined.RT.wide$M, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
sd(combined.RT.wide$F); sd(combined.RT.wide$M)
pbic1 = combined.RT.wide[ ,c(1, 2)]
pbic2 = combined.RT.wide[ ,c(1, 3)]
colnames(pbic1)[2] = "RT"
colnames(pbic2)[2] = "RT"
pbic1$direction = rep("F")
pbic2$direction = rep("M")
pbic3 = rbind(pbic1, pbic2)
ezANOVA(pbic3,
wid = id,
within = direction,
dv = RT,
type = 3,
detailed = T)
##F vs u
temp = t.test(combined.RT.wide$F, combined.RT.wide$U, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
sd(combined.RT.wide$F); sd(combined.RT.wide$U)
##U vs M
temp = t.test(combined.RT.wide$U, combined.RT.wide$M, paired = T, p.adjust.methods = "bonferroni", var.equal = T)
temp
round(temp$p.value, 3)
temp$statistic
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
pbic1 = combined.RT.wide[ ,c(1, 3)]
pbic2 = combined.RT.wide[ ,c(1, 4)]
colnames(pbic1)[2] = "RT"
colnames(pbic2)[2] = "RT"
pbic1$direction = rep("M")
pbic2$direction = rep("U")
pbic3 = rbind(pbic1, pbic2)
ezANOVA(pbic3,
wid = id,
within = direction,
dv = RT,
type = 3,
detailed = T)
####Write data to file for cross experimental####
combined$experiment = rep("Ex1B")
#write.csv(combined, file = "Ex1B.csv", row.names = F)
##run the analysis
modelRT = ezANOVA(combined,
dv = Response.RT,
between = encoding,
within = direction,
wid = id,
type = 3,
detailed = T)
modelRT$ANOVA$MSE = modelRT$ANOVA$SSd/modelRT$ANOVA$DFd
modelRT$ANOVA$MSE
aovEffectSize(modelRT, effectSize = "pes")
setwd("~/GitHub/Mediated-Reactivity-2/3 Analyses/Cross Experimental")
####Cross Experimental Analyses####
####Set up####
##read in data
Ex1A = read.csv("Data/Ex1A.csv")
Ex1B = read.csv("Data/Ex1B.csv")
Ex2A = read.csv("Data/Ex2A.csv")
Ex2B = read.csv("Data/Ex2B.csv")
##combine
colnames(Ex2A)[2] = "encoding"
colnames(Ex2B)[2] = "encoding"
colnames(Ex2A)[4] = "direction"
colnames(Ex2B)[4] = "direction"
colnames(Ex2A)[6] = "score"
colnames(Ex2B)[6] = "score"
forward_M = rbind(Ex1A, Ex2A[ , -3])
backward_M = rbind(Ex1B, Ex2B[ , -3])
##Load libraries
library(ez)
library(reshape)
library(psychReport)
##turn off scientific notation
options(scipen = 999)
####Analyses####
##test whether reactivity patterns differ between experiments
##Start with "A" experiments
model1 = ezANOVA(forward_M,
wid = id,
between = .(encoding, experiment),
within = direction,
dv = score,
type = 3,
detailed = T)
model1$ANOVA$MSE = model1$ANOVA$SSd/model1$ANOVA$DFd
model1$ANOVA$MSE
aovEffectSize(model1, effectSize = "pes")
##Main effects
tapply(forward_M$score, forward_M$encoding, mean) #main effect of encoding group (sig)
tapply(forward_M$score, forward_M$experiment, mean) #main effect of experiment (non-sig)
tapply(forward_M$score, forward_M$direction, mean) #main effet of direction (sig)
##two-way interactions
tapply(forward_M$score, list(forward_M$encoding, forward_M$experiment), mean) #encoding x experiment (non-sig)
tapply(forward_M$score, list(forward_M$encoding, forward_M$direction), mean) #encoding x direction (sig)
tapply(forward_M$score, list(forward_M$experiment, forward_M$direction), mean) #experiment x direction (sig)
##three-way (non-sig)
forward_M_JOL = subset(forward_M, forward_M$encoding == "JOL")
forward_M_R = subset(forward_M, forward_M$encoding == "Read")
tapply(forward_M_JOL$score, list(forward_M_JOL$experiment, forward_M_JOL$direction), mean)
tapply(forward_M_R$score, list(forward_M_R$experiment, forward_M_R$direction), mean)
###Pos-hocs (break down the two-way interactions)
####Now for the "B" experiments####
model2 = ezANOVA(backward_M,
wid = id,
between = .(encoding, experiment),
within = direction,
dv = score,
type = 3,
detailed = T)
model2$ANOVA$MSE = model2$ANOVA$SSd/model2$ANOVA$DFd
model2$ANOVA$MSE
aovEffectSize(model2, effectSize = "pes")
View(forward_M_R)
?cast
####T test comparisions for GD####
forward_MR.wide.1 = cast(subset(forward_M_R,
forward_M_R$experiment "Ex1A"), username ~ direction, value = "score")
####T test comparisions for GD####
forward_MR.wide.1 = cast(subset(forward_M_R,
forward_M_R$experiment == "Ex1A"), username ~ direction, value = "score")
####T test comparisions for GD####
forward_MR.wide.1 = cast(subset(forward_M_R,
forward_M_R$experiment == "Ex1A"), Username ~ direction, value = "score")
####T test comparisions for GD####
forward_MR.wide.1 = cast(subset(forward_M_R,
forward_M_R$experiment == "Ex1A"), id ~ direction, value = "score")
####T test comparisions for GD####
forward_MR.wide.1 = cast(subset(forward_M_R,
forward_M_R$experiment == "Ex1A"), id ~ direction, value = "score", mean)
forward_MR.wide.2 = cast(subset(forward_M_R,
forward_M_R$experiment == "Ex2A"), id ~ direction, value = "score", mean)
##run the t.tests
temp = t.test(forward_MR.wide.1$M, forward_MR.wide.2$M, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
sd(forward_MR.wide.1$M); forward_MR.wide.1$M
sd(forward_MR.wide.1$M); sd(forward_MR.wide.1$M)
##backward experiments
backward_MR.wide.1 = cast(subset(backward_M_R,
backward_M_R$experiment == "Ex1B"), id ~ direction, value = "score", mean)
backward_MR.wide.2 = cast(subset(backward_M_R,
backward_M_R$experiment == "Ex2B"), id ~ direction, value = "score", mean)
backward_M_JOL = subset(backward_M, backward_M$encoding == "JOL")
backward_M_R = subset(backward_M, backward_M$encoding == "Read")
##backward experiments
backward_MR.wide.1 = cast(subset(backward_M_R,
backward_M_R$experiment == "Ex1B"), id ~ direction, value = "score", mean)
backward_MR.wide.2 = cast(subset(backward_M_R,
backward_M_R$experiment == "Ex2B"), id ~ direction, value = "score", mean)
temp = t.test(backward_MR.wide.1$M, backward_MR.wide.2$M, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
mean(forward_MR.wide.1$M); mean(forward_MR.wide.1$M)
mean(forward_MR.wide.1$M); mean(forward_MR.wide.2$M)
sd(forward_MR.wide.1$M); sd(forward_MR.wide.2$M)
mean(backward_MR.wide.1$M); mean(backward_MR.wide.2$M)
sd(backward_MR.wide.1$M); sd(backward_MR.wide.2$M)
##run the t.tests
temp = t.test(forward_MR.wide.1$M, forward_MR.wide.2$M, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
sd(forward_MR.wide.1$M); sd(forward_MR.wide.2$M)
pbic1 = forward_MR.wide.1[ c(1, 3)]
pbic2 = forward_MR.wide.1[ c(1, 3)]
pbic1$ex = rep(1)
pbic2$ex = rep(2)
pbic3 = rbind(pbic1, pbic2)
ezANOVA(pbic3,
wid = id,
between = ex,
dv = M,
type = 3,
detailed = T)
pbic2 = forward_MR.wide.2[ c(1, 3)]
pbic1$ex = rep(1)
pbic2$ex = rep(2)
pbic3 = rbind(pbic1, pbic2)
ezANOVA(pbic3,
wid = id,
between = ex,
dv = M,
type = 3,
detailed = T)
ezANOVA(pbic3,
wid = id,
between = ex,
dv = M,
type = 3,
detailed = T)
#Bs
temp = t.test(backward_MR.wide.1$M, backward_MR.wide.2$M, paired = F, p.adjust.methods = "bonferroni", var.equal = T)
temp
(temp$conf.int[2] - temp$conf.int[1]) / 3.92
pbic1 = backward_MR.wide.1[ c(1, 3)]
pbic2 = backward_MR.wide.2[ c(1, 3)]
pbic1$ex = rep(1)
pbic2$ex = rep(2)
pbic3 = rbind(pbic1, pbic2)
ezANOVA(pbic3,
wid = id,
between = ex,
dv = M,
type = 3,
detailed = T)
